name: build

on:
  push:
  pull_request:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Install Dependencies
      run: |
        wget http://mirrors.kernel.org/ubuntu/pool/universe/v/vulkan/libvulkan1_${LIBVULKAN_VERSION}+dfsg1-1_amd64.deb http://mirrors.kernel.org/ubuntu/pool/universe/v/vulkan/libvulkan-dev_${LIBVULKAN_VERSION}+dfsg1-1_amd64.deb
        sudo apt install -y libarchive-dev libarchive-tools zstd upx-ucl liblz4-dev libx11-dev libiberty-dev libunwind-dev clang-9 clang-format-9 llvm-9-dev g++-8 python3 libc++-dev libc++abi-dev libgtk-3-dev libpthread-stubs0-dev libsdl2-dev
        sudo dpkg -i libvulkan1_${LIBVULKAN_VERSION}+dfsg1-1_amd64.deb libvulkan-dev_${LIBVULKAN_VERSION}+dfsg1-1_amd64.deb
      env:
        LIBVULKAN_VERSION: 1.1.70

    - name: Install Pacman
      run: |
        curl -sL https://archlinux.org/packages/core/x86_64/pacman/download | sudo tar -I zstd -C / -xf -

    - name: Clone Xenia Repositories
      id: clone
      run: |
        git clone https://github.com/bwrsandman/xenia xenia
        cd xenia
        git submodule set-url -- third_party/premake-androidmk https://github.com/Meoo/premake-androidmk
        git submodule init
        git submodule update --checkout
        printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)" > /tmp/rev
        echo "::set-output name=revision::$(cat /tmp/rev)"
    - name: Build Xenia
      id: build
      run: |
        cd xenia && ./xb build --config=${CONFIG}
      env:
        CXX: clang++-9
        CC: clang-9
        AR: llvm-ar-9
        CONFIG: Release
      if: steps.compare.outcome == 'success'

    - name: Compress Binaries
      id: compress
      run: |
        mkdir -p usr/bin usr/lib
        # for static_lib in $(find xenia/build/ -type f -name '*.a'); do mv ${static_lib} usr/lib/; done
        for executable in $(find xenia/build/ -type f -executable  -name 'xenia'); do upx --lzma --best -o usr/bin/$(basename ${executable}) ${executable}; chmod +x usr/bin/$(basename ${executable});done
        mkdir artifact
        cp -r usr artifact/
      if: steps.build.outcome == 'success'

    - name: Pack Archive
      id: pack
      run: |
        REV=${{ steps.clone.outputs.revision }}
        XZ_OPT="-9e -T 4" tar --owner=0 --group=0 -cJvf xenia.${REV}.tar.xz usr
        echo "::set-output name=sha256sum::$(sha256sum xenia.${REV}.tar.xz | cut -d ' ' -f1)"
      if: steps.compress.outcome == 'success'

    - name: Upload Artifact
      id: upload_artifact
      uses: actions/upload-artifact@v2
      with:
        name: xenia.${{ steps.clone.outputs.revision }}
        path: artifact
      if: steps.pack.outcome == 'success'
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.clone.outputs.revision }}
        release_name: ${{ steps.clone.outputs.revision }}
        draft: false
        prerelease: false
      if: steps.update.outcome == 'success'

    - name: Upload Release Package
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xenia.${{ steps.clone.outputs.revision }}.tar.xz
        asset_name: xenia.${{ steps.clone.outputs.revision }}.tar.xz
        asset_content_type: application/x-xz
      if: steps.create_release.outcome == 'success'
